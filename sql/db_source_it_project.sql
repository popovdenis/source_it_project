/*
SQLyog Enterprise - MySQL GUI v8.03 
MySQL - 5.5.23 : Database - source_it_project
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

CREATE DATABASE /*!32312 IF NOT EXISTS*/`source_it_project` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `source_it_project`;

/*Table structure for table `answer` */

DROP TABLE IF EXISTS `answer`;

CREATE TABLE `answer` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `answer` text NOT NULL,
  `trueAnswer` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=508 DEFAULT CHARSET=utf8;

/*Data for the table `answer` */

insert  into `answer`(`id`,`answer`,`trueAnswer`) values (1,'display_errors',1),(2,'errors_display',0),(3,'display_error',0),(4,'error_display',0),(5,'error_reporting',1),(6,'errors_reporting',0),(7,'display_errors',0),(8,'short_open_tags',0),(9,'error_reporting',0),(10,'errors_reporting',0),(11,'display_errors',0),(12,'short_open_tags',1),(13,'php.conf',0),(14,'httpd.ini',0),(15,'httpd.conf',0),(16,'php.ini',1),(17,'php.conf',0),(18,'httpd.ini',0),(19,'httpd.conf',1),(20,'php.ini',0),(21,'<?php echo “Hello Worldqq!”; ?>',0),(22,'<? echo “Hello Worldq!”; ?>',0),(23,'<? echo “Hello Worldq!”; php?>',1),(24,'<?= “Hello Worldq!”; ?>',0),(25,'print, echo, prompt, var_dump, var_export, var_display',0),(26,'print, print_r, prompt, var_dump, var_display',0),(27,'echo, print',1),(28,'var_export, var_dump, sprintf, printf, print_r',0),(29,'$user = User',0),(30,'$_user = User',0),(31,'$1user_ = User',1),(32,'$_1user = User',0),(33,'const',0),(34,'define()',1),(35,'constant()',0),(36,'define_const()',0),(37,'E_PARSE, E_ERROR, E_WARNING, E_NOTICE, E_ALL',1),(38,'E_ERRORS, E_WARNING, E_NOTICE, E_FATAL_ERROR, E_ALL',0),(39,'E_WARNING, E_FATAL_ERROR, E_ERROR, E_NOTICE, E_ALL',0),(40,'E_ERRORS, E_FATAL_ERROR, E_ERROR, E_NOTICE, E_ALL',0),(41,'integer, float, boolean, string, array, object, resource, null',1),(42,'boolean, double, string, array, integer, object, resource, null',0),(43,'string, array, float, null, boolean, object, resource, numeric',0),(44,'string, array, object, var, mixed, boolean, closure, resource',0),(45,'settype',1),(46,'gettype',0),(47,'isset',0),(48,'unset',0),(49,'isset',1),(50,'unset',0),(51,'empty',0),(52,'settype',0),(53,'isset',0),(54,'unset',1),(55,'remove',0),(56,'empty',0),(57,'isset',0),(58,'unset',0),(59,'empty',1),(60,'is_empty',0),(61,'$arr[] = (1, 2, 3, 4, 5);',0),(62,'$arr = array(1, 2, 3, 4, 5);',1),(63,'$arr = [1, 2, 3, 4, 5];',1),(64,'$arr = [[1], [2], [3], [4], [5]];',1),(65,'count',1),(66,'calc',0),(67,'total',0),(68,'var_dump',0),(69,'current',1),(70,'key',0),(71,'end',0),(72,'each',0),(73,'prev',0),(74,'key',1),(75,'current',0),(76,'next',0),(77,'prev',0),(78,'key',0),(79,'reset',0),(80,'next',1),(81,'current',0),(82,'key',0),(83,'reset',1),(84,'next',0),(85,'current',0),(86,'key',0),(87,'reset',0),(88,'each',1),(89,'last',0),(90,'end',1),(91,'reset',0),(92,'current',0),(93,'$a--',0),(94,'$a++',1),(95,'++$a',0),(96,'++$a++',0),(97,'Мне нужен сахар для моего топпинг',0),(98,'Мне нужен топпинг для моего сахар',0),(99,'Мне нужен топпинг для моего $coffee',0),(100,'Warning: Missing argument 2 for bar()',1),(101,'3',0),(102,'2',1),(103,'5',0),(104,'Warning',0),(105,'Функция, вызываемая по ссылке',0),(106,'Функция, содержащая внутри себя еще одну функцию',0),(107,'Функция, вызывающая саму себя',1),(108,'Нет такой функции',0),(109,'const',0),(110,'define',0),(111,'static',1),(112,'absctract',0),(113,'Переопределение типа',0),(114,'Получение типа',0),(115,'Наследование',0),(116,'Уточнение типа',1),(117,'func_num_args',1),(118,'func_get_args',0),(119,'func_args',0),(120,'get_num_args',0),(121,'func_get_arg',1),(122,'func_get_args',0),(123,'func_args',0),(124,'get_num_args',0),(125,'func_get_arg',0),(126,'func_get_args',1),(127,'func_args',0),(128,'get_num_args',0),(129,'function_exists',1),(130,'method_exists',0),(131,'class_exists',0),(132,'isset',0),(133,'explode',1),(134,'implode',0),(135,'devide',0),(136,'split',0),(137,'array_combine',0),(138,'join',1),(139,'implode',1),(140,'explode',0),(141,'ucfirst',0),(142,'ucword',0),(143,'lcfirst',1),(144,'chr',0),(145,'ucfirst',1),(146,'ucword',0),(147,'lcfirst',0),(148,'chr',0),(149,'strtolower',0),(150,'strtoupper',1),(151,'ucfirst',0),(152,'ucword',0),(153,'strtolower',1),(154,'strtoupper',0),(155,'ucfirst',0),(156,'ucword',0),(157,'trim',0),(158,'empty',0),(159,'ltrim',0),(160,'rtrim',1),(161,'strip_tags',0),(162,'trim',1),(163,'empty',0),(164,'escape',0),(165,'strip_tags',0),(166,'str_repeat',0),(167,'str_replace',1),(168,'str_format',0),(169,'strip_tags',0),(170,'str_repeat',1),(171,'str_replace',0),(172,'str_format',0),(173,'printf',1),(174,'print_r',0),(175,'sprintf',1),(176,'sprint_format',0),(177,'substr',1),(178,'mb_substr',1),(179,'strrchr',1),(180,'strstr',1),(181,'implode',0),(182,'explode',1),(183,'list',0),(184,'chunk_split',1),(185,'empty',1),(186,'isset',0),(187,'unset',0),(188,'validate',0),(189,'empty',0),(190,'isset',1),(191,'unset',0),(192,'check',0),(193,'empty',0),(194,'isset',0),(195,'unset',1),(196,'check',0),(197,'gettype',1),(198,'settype',0),(199,'set',0),(200,'get',0),(201,'gettype',0),(202,'settype',1),(203,'set',0),(204,'get',0),(205,'array_pop',1),(206,'array_push',0),(207,'array_shift',0),(208,'array_unshift',0),(209,'array_pop',0),(210,'array_push',1),(211,'array_shift',0),(212,'array_unshift',0),(213,'array_pop',0),(214,'array_push',0),(215,'array_shift',1),(216,'array_unshift',0),(217,'array_pop',0),(218,'array_push',0),(219,'array_shift',0),(220,'array_unshift',1),(221,'array_shift',0),(222,'array_unshift',0),(223,'array_column',1),(224,'array_pop',0),(225,'asort',0),(226,'natcasesort',1),(227,'ksort',1),(228,'krsort',1),(229,'rsort',1),(230,'asort',0),(231,'krsort',1),(232,'arsort',1),(233,'rsort',0),(234,'krsort',1),(235,'ksort',0),(236,'sort',0),(237,'shuffle',1),(238,'rand',0),(239,'array_rand',0),(240,'str_shiffle',0),(241,'shuffle',0),(242,'rand',0),(243,'array_rand',1),(244,'str_shiffle',0),(245,'ceil',1),(246,'floor',0),(247,'round',0),(248,'rand',0),(249,'floor',1),(250,'ceil',0),(251,'rand',0),(252,'round',0),(253,'ceil',0),(254,'round',1),(255,'floor',0),(256,'mix',0),(257,'getdate',1),(258,'date',0),(259,'microtime',0),(260,'time',0),(261,'strftime',0),(262,'date',0),(263,'strtotime',1),(264,'strptime',0),(265,'get_defined_constants',1),(266,'const',0),(267,'get_constants',0),(268,'get_defined_functions',0),(269,'$_GET',1),(270,'$_POST',1),(271,'$_COOKIE',1),(272,'$_SERVER',0),(273,'trigger_error',0),(274,'throw',0),(275,'set_error_handler',1),(276,'set_exception_handler',0),(277,'debug_backtrace',1),(278,'debug_print_backtrace',0),(279,'error_log',0),(280,'error_reporting',0),(281,'trigger_error',1),(282,'error_reporting',0),(283,'error_log',0),(284,'throw new Exception()',0),(285,'Cookies - механизм хранения данных браузером удаленной машины для отслеживания или идентификации возвращающихся посетителей.',1),(286,'Cookies - различные способы сохранения данных на стороне сервера для дальнейшего доступа к ним.',0),(287,'Cookies - один из способов группировки имен дирректорий.',0),(288,'Cookies - упорядоченное отображение, которое устанавливает соответствие между значением и ключом',0),(289,'setcookie',1),(290,'getcookie',0),(291,'set_cookie',0),(292,'Нет такой функции',0),(293,'explode',0),(294,'implode',1),(295,'serialize',1),(296,'unserialize',0),(297,'object',0),(298,'array',0),(299,'int',0),(300,'resource',1),(301,'implode',0),(302,'explode',1),(303,'serialize',0),(304,'unserialize',1),(305,'echo',0),(306,'print',0),(307,'header',1),(308,'footer',0),(309,'ob_start',1),(310,'ob_flush',0),(311,'ob_end_flush',0),(312,'ob_get_flush',0),(313,'Сессии - это это механизм хранения данных браузером удаленной машины для отслеживания или идентификации возвращающихся посетителей.',0),(314,'Сессии являются простым способом хранения информации для отдельных пользователей с уникальным идентификатором сессии',1),(315,'Сессии - это это встроенные переменные, которые всегда доступны во всех областях видимости.',0),(316,'Сессиями является ассоциативный массив данных, переданных скрипту через HTTP метод POST.',0),(317,'a+',1),(318,'x+',0),(319,'c+',0),(320,'w+',0),(321,'ftell',0),(322,'fwrite',1),(323,'fputs',1),(324,'file_put_contents',0),(325,'ftell',0),(326,'fseek',1),(327,'rewind',0),(328,'feof',0),(329,'fseek',0),(330,'rewind',1),(331,'feof',0),(332,'file_get_contents',0),(333,'newname',0),(334,'rename',1),(335,'copy',0),(336,'move_uploaded_file',0),(337,'scandir',1),(338,'glob',0),(339,'readdir',0),(340,'rewinddir',0),(341,'__construct()',1),(342,'__desctuct()',0),(343,'__sleep()',0),(344,'__clone()',0),(345,'public',1),(346,'protected',1),(347,'private',1),(348,'inherited',0),(349,'PDOException',0),(350,'ErrorException',0),(351,'Exception',1),(352,'DataException',0),(353,'Унаследованные',0),(354,'Абстрактные',0),(355,'Завершенные',1),(356,'Статические',0),(357,'static',1),(358,'self',0),(359,'оба варианта',0),(360,'ни один из вариано',0),(361,'==',0),(362,'===',0),(363,'instanceof',1),(364,'Все варианты верные',0),(365,'__get()',1),(366,'__isset()',0),(367,'__call()',0),(368,'__construct()',0),(369,'__isset()',0),(370,'__set()',1),(371,'__call()',0),(372,'__construct()',0),(373,'__isset()',0),(374,'__set()',0),(375,'__call()',1),(376,'__callStatic()',0),(377,'__isset()',0),(378,'__set()',0),(379,'__call()',0),(380,'__callStatic()',1),(381,'__call()',0),(382,'__invoke()',1),(383,'__wakeup()',0),(384,'__sleep()',0),(385,'__set_state()',1),(386,'__set()',0),(387,'__invoke()',0),(388,'__sleep()',0),(389,'__clone()',1),(390,'__construct()',0),(391,'__desctuct()',0),(392,'__invoke()',0),(393,'механизм обеспечения повторного использования кода в языках с поддержкой единого наследования.',1),(394,'класс, который содержит по крайней мере один абстрактный метод, должен быть определен как абстрактный.',0),(395,'класс, который содержит лишь объявления методов без их реализации.',0),(396,'интерфейс.',0),(397,'механизм обеспечения повторного использования кода в языках с поддержкой единого наследования.',0),(398,'класс, который содержит по крайней мере один абстрактный метод, должен быть определен как абстрактный.',0),(399,'класс, который содержит лишь объявления методов без их реализации.',1),(400,'внешний вид проекта.',0),(401,'implements',0),(402,'instanceof',0),(403,'extends',1),(404,'validates',0),(405,'implements',1),(406,'extends',0),(407,'instanceof',0),(408,'validates',0),(409,'gethostbyaddr',1),(410,'gethostbyname',0),(411,'getservbyname',0),(412,'getservbyport',0),(413,'getservbyname',0),(414,'getservbyport',0),(415,'gethostbyname',1),(416,'gethostbyaddr',0),(417,'imagecreatetruecolor',1),(418,'imageCreateFromString',0),(419,'createimage',0),(420,'imagecolorexact',0),(421,'imagecolorallocate',1),(422,'imagecolortransparent',0),(423,'imagecolorexact',0),(424,'imagecolorset',0),(425,'imagettftext',1),(426,'imagettfbbox',0),(427,'imagewritettftext',0),(428,'imagefttext',0),(429,'exec',1),(430,'execute',0),(431,'query',1),(432,'prepare',0),(433,'exec',0),(434,'execute',0),(435,'query',1),(436,'prepare',0),(437,'exec',0),(438,'execute',0),(439,'query',0),(440,'prepare',1),(441,'bindParam',1),(442,'bindValue',0),(443,'execute',0),(444,'setAttribute',0),(445,'bindParam',0),(446,'bindValue',1),(447,'execute',0),(448,'setAttribute',0),(449,'bindParam',0),(450,'bindValue',0),(451,'execute',1),(452,'setAttribute',0),(453,'fetchAll',1),(454,'fetch',0),(455,'rowCount',0),(456,'execute',0),(457,'curl_setup',0),(458,'curl_init',1),(459,'curl_construct',0),(460,'curl_setopt',0),(461,'curl_exec',1),(462,'curl_prepare',0),(463,'curl_query',0),(464,'curl_multi_exec',0),(465,'md5()',0),(466,'sha1()',0),(467,'crypt()',0),(468,'hash()',0),(469,'hash_md5()',1),(470,'__call()',0),(471,'__sleep()',1),(472,'__wakeup()',0),(473,'__invoke()',0),(474,'__call()',0),(475,'__sleep()',0),(476,'__wakeup()',1),(477,'__invoke()',0),(478,'/** comment */',1),(479,'// comment',1),(480,'<!-- comment -- >',0),(481,'// comment // another comment',0),(482,'/* comment /** with another comment **/ **/',0),(483,'/* comment // with another comment **/',1),(484,'да',0),(485,'нет',1),(486,'да',1),(487,'нет',0),(488,'да',0),(489,'нет',1),(490,'да',1),(491,'нет',0),(492,'да',1),(493,'нет',0),(494,'да',0),(495,'нет',1),(496,'да',1),(497,'нет',0),(498,'да',1),(499,'нет',0),(500,'да',1),(501,'нет',0),(502,'да',0),(503,'нет',1),(504,'да',0),(505,'нет',1),(506,'да',1),(507,'нет',0);

/*Table structure for table `article` */

DROP TABLE IF EXISTS `article`;

CREATE TABLE `article` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `title` varchar(70) NOT NULL,
  `description` varchar(250) NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `article` */

insert  into `article`(`id`,`title`,`description`,`created_at`) values (1,'Sample title1','Sample description','2015-11-13 02:00:50'),(2,'Sample title2','Sample description','2015-11-13 02:00:50'),(3,'Sample title3','Sample description','2015-11-13 02:00:50'),(4,'Sample title4','Sample description','2015-11-13 02:00:50'),(5,'Sample title5','Sample description','2015-11-13 02:00:50'),(6,'Sample title6','Sample description','2015-11-13 02:00:50'),(7,'Sample title7','Sample description','2015-11-13 02:00:50'),(8,'Sample title8','Sample description','2015-11-13 02:00:50'),(9,'Sample title9','Sample description','2015-11-13 02:00:50'),(10,'Sample title10','Sample description','2015-11-13 02:00:50'),(11,'Sample title11','Sample description','2015-11-13 02:00:50'),(12,'Sample title12','Sample description','2015-11-13 02:00:50'),(13,'Sample title13','Sample description','2015-11-13 02:00:50'),(14,'Sample title14','Sample description','2015-11-13 02:00:50'),(15,'Sample title15','Sample description','2015-11-13 02:00:50'),(16,'Sample title16','Sample description','2015-11-13 02:00:50');

/*Table structure for table `article_tag` */

DROP TABLE IF EXISTS `article_tag`;

CREATE TABLE `article_tag` (
  `article_id` int(50) NOT NULL,
  `tag_id` int(50) NOT NULL,
  KEY `article_id` (`article_id`),
  KEY `tag_id` (`tag_id`),
  CONSTRAINT `FK_article_tag_article` FOREIGN KEY (`article_id`) REFERENCES `article` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_article_tag_tag` FOREIGN KEY (`tag_id`) REFERENCES `tags` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `article_tag` */

insert  into `article_tag`(`article_id`,`tag_id`) values (1,8),(1,4),(1,12),(1,4),(2,4),(2,8),(2,1),(2,4),(3,6),(3,12),(4,1),(4,12),(4,2),(5,2),(5,3),(6,3),(6,2),(6,7),(7,7),(7,5),(7,9),(8,8),(8,13),(8,14),(9,13),(9,14),(9,1),(10,4),(10,9),(11,12),(12,11),(12,13),(13,14),(14,10),(14,9),(15,9),(15,8),(16,7),(16,13);

/*Table structure for table `gallery` */

DROP TABLE IF EXISTS `gallery`;

CREATE TABLE `gallery` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `title` varchar(70) NOT NULL,
  `description` varchar(150) NOT NULL,
  `created_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

/*Data for the table `gallery` */

insert  into `gallery`(`id`,`title`,`description`,`created_at`) values (3,'fsdf','fsdf','2015-11-08 13:42:14');

/*Table structure for table `question` */

DROP TABLE IF EXISTS `question`;

CREATE TABLE `question` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `question` text NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=132 DEFAULT CHARSET=utf8;

/*Data for the table `question` */

insert  into `question`(`id`,`question`) values (1,'Какая директива PHP отвечает за отображение ошибок?'),(2,'Какая директива PHP отвечает за уровень ошибок?'),(3,'Какая директива позволяет использовать сокращенную форму открывающих тегов PHP'),(4,'Как называется файл, который хранит настройки PHP?'),(5,'Как называется файл, который хранит базовые настройки настройки конфигурации Apache сервера?'),(6,'Какие из приведенных тегов являются не применимыми в PHP'),(7,'Какие из приведенных ниже конструкций PHP служат для вывода данных на экран'),(8,'Какой из приведенных ниже форматов объявления переменных в PHP является не правильным'),(9,'С помощью какой функции объявляются константы в PHP'),(10,'Какой из приведенных ниже наборов уровней ошибок является ошибочным'),(11,'Какой из приведенных типов данных является правильным в PHP'),(12,'Какая из функций устанавливает тип для переменной'),(13,'Какая из функций устанавливает, определена ли переменная'),(14,'Какая из функций удаляет переменную'),(15,'Какая из функций определяет, является ли переменная пустой'),(16,'Какой формат объявления массива является правильным в РНР'),(17,'Какая функция подсчитывает количество элементов в массиве'),(18,'Какая функция возвращает текущий элемент массива'),(19,'Какая функция выбирает ключ из массива'),(20,'Какая функция передвигает внутренний указатель массива на одну позицию вперёд'),(21,'Какая функция устанавливает внутренний указатель массива на его первый элемент'),(22,'Какая функция возвращает текущую пару ключ/значение из массива и смещает его указатель'),(23,'Какая функция устанавливает внутренний указатель массива на его последний элемент'),(24,'Какое выражение является пост инкрементом'),(25,'Дано выражение\nfunction bar($additive = \"сахар\", $coffee) {return \"Мне нужен $additive для моего $coffee.\"; }\necho bar(\"топпинг\");\nКакой будет результат?'),(26,'Что выведет следующие выражение: $a = 1; ++$a; echo $a++'),(27,'Что такое рекурсивная функция'),(28,'Каким выражением объявляются статические переменные'),(29,'Что такое type-hint'),(30,'Какая функция возвращает количество аргументов, переданных функции'),(31,'Какая функция возвращает элемент из списка аргументов'),(32,'Какая функция возвращает массив, содержащий аргументы функции'),(33,'Какой функцией можно проверить существование другой функции'),(34,'Какая функция разбивает строку с помощью разделителя'),(35,'Какая функция объединяет массив в строку'),(36,'Какая функция преобразует первый символ строки в нижний регистр'),(37,'Какая функция преобразует первый символ строки в верхний регистр'),(38,'Какая функция преобразует всю строку в верхний регистр'),(39,'Какая функция преобразует всю строку в верхний регистр'),(40,'Какая функция удаляет пробелы в конце строки'),(41,'Какая функция удаляет пробелы или другие символы в начале и в конце строки'),(42,'Какая из представленных функций заменяет все вхождения строки поиска на строку замены'),(43,'Какая функция возвращает повторяющуюся строку'),(44,'Какая из функций форматирует строку'),(45,'Какая из функций возвращает подстроку'),(46,'Какая функция разбивает строку на подстроки'),(47,'Какая функция проверяет переменную на пустоту'),(48,'Какая функция определяет была ли установлена переменная'),(49,'Какая функция удаляет переменную'),(50,'Какая функция возвращает PHP-тип переменной'),(51,'Какая функция устанавливает PHP-тип переменной'),(52,'Какая функция добавляет один или несколько элементов в конец массива'),(53,'Какая функция добавляет один или несколько элементов в начало массива'),(54,'Какая функция извлекает первый элемент массива'),(55,'Какая функция извлекает последний элемент из массива'),(56,'Извлекает значение из одного столбца в каждом входящем массиве'),(57,'Какая функция сортирует по ключу'),(58,'Какая функция сортирует в обратном порядке'),(59,'Какая функция сортирует массив по ключам в обратном порядке'),(60,'Какая функция перемешивает массив'),(61,'Какая функция возвращает случайное значение из массива'),(62,'Какая функция округляет дробь в большую степень'),(63,'Какая функция округляет дробь в меньшую степень'),(64,'Какая функция округляет число типа float'),(65,'Возвращает ассоциативный массив, содержащий информацию о дате/времени'),(66,'Преобразует текстовое представление даты на английском языке в метку времени Unix'),(67,'Какая из приведенных ниже функций возвращает массив с именами и значениями всех предопределенных констант'),(68,'Данные каких переменных содержит в себе $_REQUEST'),(69,'Какая функция задает определенный пользователем обработчик ошибок'),(70,'Какая функция выводит стек вызовов функций в массив'),(71,'Какой функцией осуществляется вызов пользовательских ошибок, предупреждений или уведомлений'),(72,'Какое из обозначений ниже наиболее правильно характеризует cookies'),(73,'Какой функцией устанавливаются куки'),(74,'Какой функцией можно преобразовать массив в строку'),(75,'Какой из типов PHP не поддается сериализации'),(76,'Какой функцией можно преобразовать строку в массив'),(77,'Какой функцией осуществляется отправка HTTP-заголовка'),(78,'Какой функцией осуществляется включение буферизации вывода'),(79,'Какое из определений сессии правильное:'),(80,'Какой из режимов работы с фалами открывает доступ для чтения и записи и помещает указатель в конец файла'),(81,'Какая из функций осуществляет бинарно-безопасную запись в файл'),(82,'Какая из перечисленных устанавливает смещение в файле'),(83,'Какая функция сбрасывает курсор у файлового указателя'),(84,'Какая функция переименовывает файл'),(85,'Какая функций возвращает массив, содержащий имена файлов и каталогов, расположенном по пути, переданном в качестве параметра'),(86,'Какой метод в классе будет вызывается при каждом создании нового объекта'),(87,'Какие из перечисленных модификаторов доступа верные'),(88,'Какой из представленных классов является базовым для всех исключений'),(89,'Какие методы нельзя переопределить'),(90,'Какая конструкция PHP используется при позднем статическом связывании'),(91,'С помощью какого оператора можно проветить что $entity является эземпляром класса User?'),(92,'Какой из магических методов вызывается при обращении к неопределенному свойству'),(93,'Какой из магических методов вызывается когда неопределенному свойству присваивается значение'),(94,'Какой из магических методов вызывается при обращении к неопределенному методу.'),(95,'Какой из магических методов вызывается при обращении к неопределенному статическому методу?'),(96,'Какой магический метод вызывается, когда скрипт пытается выполнить объект как функцию?'),(97,'Какой метод вызывается для тех классов, которые экспортируются функцией var_export() ?'),(98,'Какой магический метод используется при клонировании объекта'),(99,'Trait это'),(100,'Interface в PHP это'),(101,'Какая конструкция языка в PHP используется для наследования одного класса от другого'),(102,'Какая конструкция языка в PHP используется для реализации интерфейса классом'),(103,'Какая функция используется для получения имени хоста по IP адресу'),(104,'Какая функция используется для получения IP адреса (адресов) по имени хоста'),(105,'С помощью какой функции создается полноцветное изображение'),(106,'Какой функцией создается цвет для изображения'),(107,'Какой функцией рисуется текст на изображении шрифтом TrueType'),(108,'Каким PDO-методом можно выполнить SQL-запрос'),(109,'Какой PDO-метод выполняет SQL запрос и возвращает результирующий набор в виде объекта PDOStatement'),(110,'Какой PDO-метод подготавливает запрос к выполнению и возвращает ассоциированный с этим запросом объект'),(111,'Какой PDO-метод привязывает параметр запроса к переменной'),(112,'Какой PDO-метод задает значение именованной или неименованной псевдопеременной в подготовленном SQL запросе.'),(113,'Какой PDO-метод запускает подготовленный запрос на выполнение'),(114,'Какой PDO-метод возвращает массив, содержащий все строки результирующего набора'),(115,'Какая функция инициализирует сеанс cURL'),(116,'Какая функция выполняет запрос cURL'),(117,'Какая из перечисленных функций хеширования не существует в PHP'),(118,'Какой магический метод вызывается при сериализации объекта?'),(119,'Какие из приведенных ниже форматов комментариев в PHP являются правильными'),(120,'Может ли один класс наследовать несколько классов в PHP?'),(121,'Может ли класс реализовывать несколько интерфейсов в PHP?'),(122,'Может ли интерфейс содержать реализацию методов?'),(123,'Может ли интерфейс содержать константы?'),(124,'Может ли интерфейс наследовать другой интерфейс?'),(125,'Может ли интерфейс содержать абстрактные методы?'),(126,'Может ли абстрактный класс наследовать обычный класс?'),(127,'Может ли абстрактный класс наследовать другой абстрактный класс?'),(128,'Может ли абстрактный класс содержать реализацию методов?'),(129,'Может ли абстрактный класс содержать реализацию абстрактных методов?'),(130,'Можно ли переопределять абстрактные методы, изменяя типы или набор параметров?'),(131,'Может ли абстрактный класс наследовать интерфейс?');

/*Table structure for table `question_answer` */

DROP TABLE IF EXISTS `question_answer`;

CREATE TABLE `question_answer` (
  `question_id` int(5) NOT NULL,
  `answer_id` int(5) NOT NULL,
  KEY `FK_question_answer_answer` (`answer_id`),
  KEY `question_answer` (`question_id`,`answer_id`),
  KEY `FK_question_answer_question` (`question_id`),
  CONSTRAINT `FK_question_answer_answer` FOREIGN KEY (`answer_id`) REFERENCES `answer` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_question_answer_question` FOREIGN KEY (`question_id`) REFERENCES `question` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `question_answer` */

insert  into `question_answer`(`question_id`,`answer_id`) values (1,1),(1,2),(1,3),(1,4),(2,5),(2,6),(2,7),(2,8),(3,9),(3,10),(3,11),(3,12),(4,13),(4,14),(4,15),(4,16),(5,17),(5,18),(5,19),(5,20),(6,21),(6,22),(6,23),(6,24),(7,25),(7,26),(7,27),(7,28),(8,29),(8,30),(8,31),(8,32),(9,33),(9,34),(9,35),(9,36),(10,37),(10,38),(10,39),(10,40),(11,41),(11,42),(11,43),(11,44),(12,45),(12,46),(12,47),(12,48),(13,49),(13,50),(13,51),(13,52),(14,53),(14,54),(14,55),(14,56),(15,57),(15,58),(15,59),(15,60),(16,61),(16,62),(16,63),(16,64),(17,65),(17,66),(17,67),(17,68),(18,69),(18,70),(18,71),(18,72),(19,73),(19,74),(19,75),(19,76),(20,77),(20,78),(20,79),(20,80),(21,81),(21,82),(21,83),(21,84),(22,85),(22,86),(22,87),(22,88),(23,89),(23,90),(23,91),(23,92),(24,93),(24,94),(24,95),(24,96),(25,97),(25,98),(25,99),(25,100),(26,101),(26,102),(26,103),(26,104),(27,105),(27,106),(27,107),(27,108),(28,109),(28,110),(28,111),(28,112),(29,113),(29,114),(29,115),(29,116),(30,117),(30,118),(30,119),(30,120),(31,121),(31,122),(31,123),(31,124),(32,125),(32,126),(32,127),(32,128),(33,129),(33,130),(33,131),(33,132),(34,133),(34,134),(34,135),(34,136),(35,137),(35,138),(35,139),(35,140),(36,141),(36,142),(36,143),(36,144),(37,145),(37,146),(37,147),(37,148),(38,149),(38,150),(38,151),(38,152),(39,153),(39,154),(39,155),(39,156),(40,157),(40,158),(40,159),(40,160),(41,161),(41,162),(41,163),(41,164),(42,165),(42,166),(42,167),(42,168),(43,169),(43,170),(43,171),(43,172),(44,173),(44,174),(44,175),(44,176),(45,177),(45,178),(45,179),(45,180),(46,181),(46,182),(46,183),(46,184),(47,185),(47,186),(47,187),(47,188),(48,189),(48,190),(48,191),(48,192),(49,193),(49,194),(49,195),(49,196),(50,197),(50,198),(50,199),(50,200),(51,201),(51,202),(51,203),(51,204),(52,205),(52,206),(52,207),(52,208),(53,209),(53,210),(53,211),(53,212),(54,213),(54,214),(54,215),(54,216),(55,217),(55,218),(55,219),(55,220),(56,221),(56,222),(56,223),(56,224),(57,225),(57,226),(57,227),(57,228),(58,229),(58,230),(58,231),(58,232),(59,233),(59,234),(59,235),(59,236),(60,237),(60,238),(60,239),(60,240),(61,241),(61,242),(61,243),(61,244),(62,245),(62,246),(62,247),(62,248),(63,249),(63,250),(63,251),(63,252),(64,253),(64,254),(64,255),(64,256),(65,257),(65,258),(65,259),(65,260),(66,261),(66,262),(66,263),(66,264),(67,265),(67,266),(67,267),(67,268),(68,269),(68,270),(68,271),(68,272),(69,273),(69,274),(69,275),(69,276),(70,277),(70,278),(70,279),(70,280),(71,281),(71,282),(71,283),(71,284),(72,285),(72,286),(72,287),(72,288),(73,289),(73,290),(73,291),(73,292),(74,293),(74,294),(74,295),(74,296),(75,297),(75,298),(75,299),(75,300),(76,301),(76,302),(76,303),(76,304),(77,305),(77,306),(77,307),(77,308),(78,309),(78,310),(78,311),(78,312),(79,313),(79,314),(79,315),(79,316),(80,317),(80,318),(80,319),(80,320),(81,321),(81,322),(81,323),(81,324),(82,325),(82,326),(82,327),(82,328),(83,329),(83,330),(83,331),(83,332),(84,333),(84,334),(84,335),(84,336),(85,337),(85,338),(85,339),(85,340),(86,341),(86,342),(86,343),(86,344),(87,345),(87,346),(87,347),(87,348),(88,349),(88,350),(88,351),(88,352),(89,353),(89,354),(89,355),(89,356),(90,357),(90,358),(90,359),(90,360),(91,361),(91,362),(91,363),(91,364),(92,365),(92,366),(92,367),(92,368),(93,369),(93,370),(93,371),(93,372),(94,373),(94,374),(94,375),(94,376),(95,377),(95,378),(95,379),(95,380),(96,381),(96,382),(96,383),(96,384),(97,385),(97,386),(97,387),(97,388),(98,389),(98,390),(98,391),(98,392),(99,393),(99,394),(99,395),(99,396),(100,397),(100,398),(100,399),(100,400),(101,401),(101,402),(101,403),(101,404),(102,405),(102,406),(102,407),(102,408),(103,409),(103,410),(103,411),(103,412),(104,413),(104,414),(104,415),(104,416),(105,417),(105,418),(105,419),(105,420),(106,421),(106,422),(106,423),(106,424),(107,425),(107,426),(107,427),(107,428),(108,429),(108,430),(108,431),(108,432),(109,433),(109,434),(109,435),(109,436),(110,437),(110,438),(110,439),(110,440),(111,441),(111,442),(111,443),(111,444),(112,445),(112,446),(112,447),(112,448),(113,449),(113,450),(113,451),(113,452),(114,453),(114,454),(114,455),(114,456),(115,457),(115,458),(115,459),(115,460),(116,461),(116,462),(116,463),(116,464),(117,465),(117,465),(117,465),(117,465),(117,465),(118,470),(118,470),(118,470),(118,470),(118,470),(118,470),(118,470),(118,470),(119,478),(119,479),(119,480),(119,481),(119,482),(119,483),(120,484),(120,485),(121,486),(121,487),(122,488),(122,489),(123,190),(123,491),(124,492),(124,493),(125,494),(125,495),(126,496),(126,497),(127,498),(127,499),(128,500),(128,501),(129,502),(129,503),(130,504),(130,505),(131,506),(131,507);

/*Table structure for table `role` */

DROP TABLE IF EXISTS `role`;

CREATE TABLE `role` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `role` varchar(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

/*Data for the table `role` */

insert  into `role`(`id`,`role`) values (1,'admin'),(2,'editor'),(3,'user');

/*Table structure for table `tags` */

DROP TABLE IF EXISTS `tags`;

CREATE TABLE `tags` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `tag` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

/*Data for the table `tags` */

insert  into `tags`(`id`,`tag`) values (1,'JavaScript'),(2,'WordPress'),(3,'Joomla'),(4,'HTML'),(5,'CSS'),(6,'AJAX'),(7,'C++'),(8,'C#'),(9,'JSON'),(10,'paint'),(11,'Adobe'),(12,'Visual studio'),(13,'PHP'),(14,'MYSQL');

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `firstname` varchar(50) NOT NULL,
  `lastname` varchar(50) NOT NULL,
  `email` varchar(50) NOT NULL,
  `password` varchar(100) NOT NULL,
  `phone` varchar(30) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`id`,`firstname`,`lastname`,`email`,`password`,`phone`,`created_at`) values (2,'Kate','Moss','kate.moss@mail.ru','12345','12345','2015-11-08 19:09:41'),(5,'sadfasd','asdas','asd','12345','asd','2015-11-08 19:15:40');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
